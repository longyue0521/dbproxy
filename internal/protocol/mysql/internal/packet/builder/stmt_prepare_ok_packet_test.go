package builder

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestPrepareStmtResponseBuilder_BuildOK(t *testing.T) {
	t.Skip()
	tests := []struct {
		name       string
		getBuilder func(t *testing.T) *StmtPrepareOKPacketBuilder
		wantResp   []byte
	}{
		// {
		// 	name: "for a prepared query like SELECT CONCAT(?, ?) AS col1 and no CLIENT_OPTIONAL_RESULTSET_METADATA",
		// 	getBuilder: func(t *testing.T) *StmtPrepareOKPacketBuilder {
		// 		b := NewPrepareStmtResponseBuilder(0)
		// 		b.StatementID = 1
		// 		b.NumColumns = 2
		// 		b.NumParams = 2
		// 		return b
		// 	},
		// 	wantResp: []byte{
		// 		0x0c, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
		// 		0x17, 0x00, 0x00, 0x02, 0x03, 0x64, 0x65, 0x66, 0x00, 0x00, 0x00, 0x01, 0x3f, 0x00, 0x0c, 0x3f,
		// 		0x00, 0x00, 0x00, 0x00, 0x00, 0xfd, 0x80, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x03, 0x03,
		// 		0x64, 0x65, 0x66, 0x00, 0x00, 0x00, 0x01, 0x3f, 0x00, 0x0c, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00,
		// 		0xfd, 0x80, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x04, 0xfe, 0x00, 0x00, 0x02, 0x00, 0x1a,
		// 		0x00, 0x00, 0x05, 0x03, 0x64, 0x65, 0x66, 0x00, 0x00, 0x00, 0x04, 0x63, 0x6f, 0x6c, 0x31, 0x00,
		// 		0x0c, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfd, 0x80, 0x00, 0x1f, 0x00, 0x00, 0x05, 0x00, 0x00,
		// 		0x06, 0xfe, 0x00, 0x00, 0x02, 0x00,
		// 	},
		// },
		{
			name: "Prepare语句'DO 1'没有参数_没有结果集_未设置_CLIENT_OPTIONAL_RESULTSET_METADATA",
			getBuilder: func(t *testing.T) *StmtPrepareOKPacketBuilder {
				return &StmtPrepareOKPacketBuilder{FieldStatementID: 1}
			},
			wantResp: []byte{
				// packet header 下方比较时会被忽略
				0x0c, 0x00, 0x00, 0x01,
				// 载荷 payload
				0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			},
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			b := tt.getBuilder(t)
			assert.Equal(t, tt.wantResp[4:], b.Build()[4:])
		})
	}
}
